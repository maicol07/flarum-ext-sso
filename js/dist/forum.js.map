{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,IAAIP,IAAI,OAAQ,iBCAtD,EAA+BM,OAAOC,IAAIP,IAAI,OAAQ,a,aCA5D,MAAM,EAA+BM,OAAOC,IAAIP,IAAI,OAAQ,oC,aCA5D,MAAM,EAA+BM,OAAOC,IAAIP,IAAI,OAAQ,iC,aCA5D,MAAM,EAA+BM,OAAOC,IAAIP,IAAI,OAAQ,+B,aCQ5D,SAASQ,EAAQC,EAAMC,GACrB,IAAIF,EAAU,UAAUG,UAAU,gBAAgBF,KAClD,YAAaG,IAATF,GACEA,IAASG,SAAYC,MAAMN,KAC7BA,EAAUO,OAAOP,IAEZE,EAAKF,IAEPA,CACT,CAqBA,iBAAiBQ,IAAI,eAAgB,MACnC,IAAAC,UAAS,cAAsB,WAAY,KACzC,IAAKT,EAAQ,gBAAiBK,SAAU,CACtC,MAAMK,EAAWV,EAAQ,aAQzB,MAPIU,EACFC,OAAOC,SAASC,KAAOH,EAEvB,WAAWI,KAAK,CACdC,KAAM,SACL,eAAeC,MAAM,0CAEpB,IAAIC,MAAM,iBAClB,KAEF,IAAAC,QAAO,cAA2B,QAASC,IACzC,IAAKnB,EAAQ,gBAAiBK,SAAU,CACtC,MAAMe,EA/BH,CACLC,MAAO,CACLC,IAAKtB,EAAQ,aACbuB,SAAU,QACVC,WAAYxB,EAAQ,mBAAoBK,SACxCoB,KAAM,eAAeT,MAAM,kCAE7BU,OAAQ,CACNJ,IAAKtB,EAAQ,cACbuB,SAAU,SACVC,WAAYxB,EAAQ,oBAAqBK,SACzCoB,KAAM,eAAeT,MAAM,oCAqB3B,IAAK,MAAO,CAAEW,KAAUtC,OAAOuC,QAAQR,GACrC,GAAIO,EAAML,IACR,GAAIK,EAAMH,WACRL,EAAQU,OAAOF,EAAMJ,cAChB,CAEL,IAAKJ,EAAQW,IAAIH,EAAMJ,UACrB,OAEFJ,EAAQY,WAAWJ,EAAMJ,SAAUS,EAAE,IAAK,CACxCnB,KAAMc,EAAML,IACZW,UAAW,uBACVN,EAAMF,MACX,CAGN,KAEF,IAAAP,QAAO,cAAwB,eAAgBE,KACzCpB,EAAQ,gBAAiBK,UAAaL,EAAQ,eAKlDoB,EAAMS,OAAO,eACbT,EAAMS,OAAO,kBACR7B,EAAQ,qBAAsBK,UAGnCe,EAAMZ,IAAI,gBAAiBwB,EAAE,IAAK,CAChCE,MAAO,SACPrB,KAAMb,EAAQ,sBACdmC,OAAQnC,EAAQ,qCAAsCK,SAAW,SAAW,IAC3E,eAAeW,MAAM,+CAE1B,IAAAE,QAAO,cAAwB,gBAAiBE,IAC1CpB,EAAQ,qBAAsBK,UAAYL,EAAQ,gBAAiBK,UAKnEe,EAAMU,IAAI,YAAuD,IAAzCV,EAAM5B,IAAI,WAAW4C,SAASC,QACxDjB,EAAMS,OAAO,c","sources":["webpack://@maicol07/flarum-ext-sso/webpack/bootstrap","webpack://@maicol07/flarum-ext-sso/webpack/runtime/compat get default export","webpack://@maicol07/flarum-ext-sso/webpack/runtime/define property getters","webpack://@maicol07/flarum-ext-sso/webpack/runtime/hasOwnProperty shorthand","webpack://@maicol07/flarum-ext-sso/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.reg.get('core', 'forum/components/HeaderSecondary')\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.reg.get('core', 'forum/components/SettingsPage')\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.reg.get('core', 'forum/components/LogInModal')\"","webpack://@maicol07/flarum-ext-sso/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extend');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/HeaderSecondary');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/SettingsPage');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/LogInModal');","import { extend, override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport LogInModal from 'flarum/forum/components/LogInModal';\n/**\n * Returns a setting added by the extension\n */\nfunction setting(slug, cast) {\n  let setting = app.forum.attribute(`maicol07-sso.${slug}`);\n  if (cast !== undefined) {\n    if (cast === Boolean && !isNaN(setting)) {\n      setting = Number(setting);\n    }\n    return cast(setting);\n  }\n  return setting;\n}\n\n/**\n * Returns login and signup props\n */\nfunction getItems() {\n  return {\n    login: {\n      url: setting('login_url'),\n      itemName: 'logIn',\n      removeItem: setting('remove_login_btn', Boolean),\n      text: app.translator.trans('core.forum.header.log_in_link')\n    },\n    signup: {\n      url: setting('signup_url'),\n      itemName: 'signUp',\n      removeItem: setting('remove_signup_btn', Boolean),\n      text: app.translator.trans('core.forum.header.sign_up_link')\n    }\n  };\n}\napp.initializers.add('maicol07-sso', () => {\n  override(LogInModal.prototype, 'oncreate', () => {\n    if (!setting('provider_mode', Boolean)) {\n      const loginUrl = setting('login_url');\n      if (loginUrl) {\n        window.location.href = loginUrl;\n      } else {\n        app.alerts.show({\n          type: 'error'\n        }, app.translator.trans('maicol07-sso.forum.no_login_url_error'));\n      }\n      throw new Error('Stop execution');\n    }\n  });\n  extend(HeaderSecondary.prototype, 'items', buttons => {\n    if (!setting('provider_mode', Boolean)) {\n      const items = getItems();\n      for (const [, props] of Object.entries(items)) {\n        if (props.url) {\n          if (props.removeItem) {\n            buttons.remove(props.itemName);\n          } else {\n            // Remove login button\n            if (!buttons.has(props.itemName)) {\n              return;\n            }\n            buttons.setContent(props.itemName, m(\"a\", {\n              href: props.url,\n              className: \"Button Button--link\"\n            }, props.text));\n          }\n        }\n      }\n    }\n  });\n  extend(SettingsPage.prototype, 'accountItems', items => {\n    if (setting('provider_mode', Boolean) || !setting('login_url')) {\n      return; // Do not add account items if no login url is set.\n    }\n\n    // Remove change email and password buttons\n    items.remove('changeEmail');\n    items.remove('changePassword');\n    if (!setting('manage_account_url', Boolean)) {\n      return;\n    }\n    items.add('manageAccount', m(\"a\", {\n      class: \"Button\",\n      href: setting('manage_account_url'),\n      target: setting('manage_account_btn_open_in_new_tab', Boolean) ? '_blank' : ''\n    }, app.translator.trans('maicol07-sso.forum.manage_account_btn')));\n  });\n  extend(SettingsPage.prototype, 'settingsItems', items => {\n    if (setting('manage_account_url', Boolean) || setting('provider_mode', Boolean)) {\n      return; // Manage account link is added above\n    }\n\n    // Remove account section\n    if (items.has('account') && items.get('account').children.length === 0) {\n      items.remove('account');\n    }\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","reg","setting","slug","cast","attribute","undefined","Boolean","isNaN","Number","add","override","loginUrl","window","location","href","show","type","trans","Error","extend","buttons","items","login","url","itemName","removeItem","text","signup","props","entries","remove","has","setContent","m","className","class","target","children","length"],"sourceRoot":""}