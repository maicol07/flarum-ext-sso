{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCUxD,SAASC,EAAQC,EAAcC,GAC7B,IAAIF,EAAUG,IAAAA,MAAUC,UAAU,gBAAgBH,GAElD,YAAaI,IAATH,GACEA,IAASI,SAAYC,MAAMP,KAC7BA,EAAUQ,OAAOR,IAEZE,EAAKF,IAGPA,CACT,CAKA,SAASS,IACP,MAAO,CACLC,MAAO,CACLC,IAAKX,EAAQ,aACbY,SAAU,QACVC,WAAYb,EAAQ,mBAAoBM,SACxCQ,KAAMX,IAAAA,WAAeY,MAAM,kCAE7BC,OAAQ,CACNL,IAAKX,EAAQ,cACbY,SAAU,SACVC,WAAYb,EAAQ,oBAAqBM,SACzCQ,KAAMX,IAAAA,WAAeY,MAAM,mCAGjC,CAEAZ,IAAAA,aAAiBc,IAAI,gBAAgB,YACnCC,EAAAA,EAAAA,UAASC,IAAAA,UAAsB,YAAY,WACzC,IAAKnB,EAAQ,gBAAiBM,SAAU,CACtC,IAAMc,EAAQX,IAEd,MADAY,OAAOC,SAASC,KAAOH,EAAMV,MAAMC,IAC7B,IAAIa,MAAM,iBAClB,CACF,KAEAC,EAAAA,EAAAA,QAAOC,IAAAA,UAA2B,SAAS,SAACC,GAC1C,IAAK3B,EAAQ,gBAAiBM,SAE5B,IADA,IAAMc,EAAQX,IACdmB,EAAA,EAAAC,EAAwBzC,OAAO0C,QAAQV,GAAMQ,EAAAC,EAAAE,OAAAH,IAAE,CAA1C,IAASI,EAATH,EAAAD,GAAc,GACjB,GAAII,EAAMrB,IACR,GAAIqB,EAAMnB,WACRc,EAAQM,OAAOD,EAAMpB,cAChB,CAEL,IAAKe,EAAQO,IAAIF,EAAMpB,UACrB,OAEFe,EAAQQ,WACNH,EAAMpB,SACNwB,EAAA,KAAGb,KAAMS,EAAMrB,IAAK0B,UAAU,uBAC3BL,EAAMlB,MAGb,CAEJ,CAEJ,KAEAW,EAAAA,EAAAA,QAAOa,IAAAA,UAAwB,gBAAgB,SAAClB,IAC1CpB,EAAQ,gBAAiBM,UAAaN,EAAQ,eAKlDoB,EAAMa,OAAO,eACbb,EAAMa,OAAO,kBAERjC,EAAQ,qBAAsBM,UAInCc,EAAMH,IACJ,gBACAmB,EAAA,KAAGG,MAAM,SAAShB,KAAMvB,EAAQ,sBAAuBwC,OAAQxC,EAAQ,qCAAsCM,SAAW,SAAW,IAChIH,IAAAA,WAAeY,MAAM,2CAG5B,KAEAU,EAAAA,EAAAA,QAAOa,IAAAA,UAAwB,iBAAiB,SAAClB,GAC3CpB,EAAQ,qBAAsBM,UAAYN,EAAQ,gBAAiBM,UAKnEc,EAAMc,IAAI,YAAuD,IAAzCd,EAAM7B,IAAI,WAAWkD,SAASV,QACxDX,EAAMa,OAAO,UAEjB,GACF,G","sources":["webpack://@maicol07/flarum-ext-sso/webpack/bootstrap","webpack://@maicol07/flarum-ext-sso/webpack/runtime/compat get default export","webpack://@maicol07/flarum-ext-sso/webpack/runtime/define property getters","webpack://@maicol07/flarum-ext-sso/webpack/runtime/hasOwnProperty shorthand","webpack://@maicol07/flarum-ext-sso/external root \"flarum.core.compat['common/extend']\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.core.compat['forum/app']\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@maicol07/flarum-ext-sso/external root \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@maicol07/flarum-ext-sso/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/LogInModal'];","import { extend, override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport LogInModal from 'flarum/forum/components/LogInModal';\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter';\n\n/**\n * Returns a setting added by the extension\n */\nfunction setting(slug: string, cast?: typeof Boolean | typeof Number): any | boolean | number {\n  let setting = app.forum.attribute(`maicol07-sso.${slug}`);\n\n  if (cast !== undefined) {\n    if (cast === Boolean && !isNaN(setting as number)) {\n      setting = Number(setting);\n    }\n    return cast(setting);\n  }\n\n  return setting;\n}\n\n/**\n * Returns login and signup props\n */\nfunction getItems(): Record<string, { url: string; itemName: string; removeItem: boolean; text: string | NestedStringArray }> {\n  return {\n    login: {\n      url: setting('login_url'),\n      itemName: 'logIn',\n      removeItem: setting('remove_login_btn', Boolean),\n      text: app.translator.trans('core.forum.header.log_in_link'),\n    },\n    signup: {\n      url: setting('signup_url'),\n      itemName: 'signUp',\n      removeItem: setting('remove_signup_btn', Boolean),\n      text: app.translator.trans('core.forum.header.sign_up_link'),\n    },\n  };\n}\n\napp.initializers.add('maicol07-sso', () => {\n  override(LogInModal.prototype, 'oncreate', () => {\n    if (!setting('provider_mode', Boolean)) {\n      const items = getItems();\n      window.location.href = items.login.url;\n      throw new Error('Stop execution');\n    }\n  });\n\n  extend(HeaderSecondary.prototype, 'items', (buttons) => {\n    if (!setting('provider_mode', Boolean)) {\n      const items = getItems();\n      for (const [, props] of Object.entries(items)) {\n        if (props.url) {\n          if (props.removeItem) {\n            buttons.remove(props.itemName);\n          } else {\n            // Remove login button\n            if (!buttons.has(props.itemName)) {\n              return;\n            }\n            buttons.setContent(\n              props.itemName,\n              <a href={props.url} className=\"Button Button--link\">\n                {props.text}\n              </a>\n            );\n          }\n        }\n      }\n    }\n  });\n\n  extend(SettingsPage.prototype, 'accountItems', (items) => {\n    if (setting('provider_mode', Boolean) || !setting('login_url')) {\n      return; // Do not add account items if no login url is set.\n    }\n\n    // Remove change email and password buttons\n    items.remove('changeEmail');\n    items.remove('changePassword');\n\n    if (!setting('manage_account_url', Boolean)) {\n      return;\n    }\n\n    items.add(\n      'manageAccount',\n      <a class=\"Button\" href={setting('manage_account_url')} target={setting('manage_account_btn_open_in_new_tab', Boolean) ? '_blank' : ''}>\n        {app.translator.trans('maicol07-sso.forum.manage_account_btn')}\n      </a>\n    );\n  });\n\n  extend(SettingsPage.prototype, 'settingsItems', (items) => {\n    if (setting('manage_account_url', Boolean) || setting('provider_mode', Boolean)) {\n      return; // Manage account link is added above\n    }\n\n    // Remove account section\n    if (items.has('account') && items.get('account').children.length === 0) {\n      items.remove('account');\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","setting","slug","cast","app","attribute","undefined","Boolean","isNaN","Number","getItems","login","url","itemName","removeItem","text","trans","signup","add","override","LogInModal","items","window","location","href","Error","extend","HeaderSecondary","buttons","_i","_Object$entries","entries","length","props","remove","has","setContent","m","className","SettingsPage","class","target","children"],"sourceRoot":""}